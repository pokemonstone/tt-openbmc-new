From c3f6750ec503bcdae2e8fffa2c285cce14e25b36 Mon Sep 17 00:00:00 2001
From: Varun Sampat <vsampat@twitter.com>
Date: Mon, 18 May 2020 19:59:50 -0400
Subject: [PATCH] Fix sensor hysteresis issue

---
 include/HwmonTempSensor.hpp |  4 +++-
 include/sensor.hpp          |  8 +++++++-
 src/HwmonTempMain.cpp       | 14 ++++++++++++--
 src/HwmonTempSensor.cpp     |  5 +++--
 4 files changed, 25 insertions(+), 6 deletions(-)

diff --git a/include/HwmonTempSensor.hpp b/include/HwmonTempSensor.hpp
index a267376..c6ecfc3 100644
--- a/include/HwmonTempSensor.hpp
+++ b/include/HwmonTempSensor.hpp
@@ -17,7 +17,8 @@ class HwmonTempSensor : public Sensor
                     boost::asio::io_service& io, const std::string& fanName,
                     std::vector<thresholds::Threshold>&& thresholds,
                     const std::string& sensorConfiguration,
-                    const PowerState powerState);
+                    const PowerState powerState,
+                    const double hysteresisVal);
     ~HwmonTempSensor();
 
   private:
@@ -27,6 +28,7 @@ class HwmonTempSensor : public Sensor
     boost::asio::streambuf readBuf;
     std::string path;
     PowerState readState;
+    double hysteresisVal;
     size_t errCount;
     void setupRead(void);
     void handleResponse(const boost::system::error_code& err);
diff --git a/include/sensor.hpp b/include/sensor.hpp
index 98c5574..765f193 100644
--- a/include/sensor.hpp
+++ b/include/sensor.hpp
@@ -20,7 +20,7 @@ struct Sensor
         name(name),
         configurationPath(configurationPath), objectType(objectType),
         maxValue(max), minValue(min), thresholds(std::move(thresholdData)),
-        hysteresisTrigger((max - min) * 0.01),
+        hysteresisTrigger(0),
         hysteresisPublish((max - min) * 0.0001)
     {
     }
@@ -228,4 +228,10 @@ struct Sensor
             sensorInterface->set_property("InvalidValue", newState);
         }
     }
+
+    void updateHysteresis(const double& HysteresisValue)
+    {
+       hysteresisTrigger = HysteresisValue;
+    }
+
 };
diff --git a/src/HwmonTempMain.cpp b/src/HwmonTempMain.cpp
index e003bd9..6fec09d 100644
--- a/src/HwmonTempMain.cpp
+++ b/src/HwmonTempMain.cpp
@@ -209,12 +209,22 @@ void createSensors(
                         VariantToStringVisitor(), findPowerOn->second);
                     setReadState(powerState, readState);
                 }
+                
+                float hysteresisVal = 0;
+                auto findHysteresisVal =
+                    baseConfiguration->second.find("HysteresisVal");
+                if (findHysteresisVal != baseConfiguration->second.end())
+                {
+                    hysteresisVal = std::visit(VariantToFloatVisitor(),
+                                             findHysteresisVal->second);
+                }
+
                 auto& sensor = sensors[sensorName];
                 sensor = nullptr;
                 sensor = std::make_unique<HwmonTempSensor>(
                     directory.string() + "/temp1_input", sensorType,
                     objectServer, dbusConnection, io, sensorName,
-                    std::move(sensorThresholds), *interfacePath, readState);
+                    std::move(sensorThresholds), *interfacePath, readState, hysteresisVal);
 
                 // Looking for keys like "Name1" for temp2_input,
                 // "Name2" for temp3_input, etc.
@@ -238,7 +248,7 @@ void createSensors(
                             "_input",
                         sensorType, objectServer, dbusConnection, io,
                         sensorName, std::vector<thresholds::Threshold>(),
-                        *interfacePath, readState);
+                        *interfacePath, readState, hysteresisVal);
                 }
             }
         }));
diff --git a/src/HwmonTempSensor.cpp b/src/HwmonTempSensor.cpp
index b42ce55..0542f65 100644
--- a/src/HwmonTempSensor.cpp
+++ b/src/HwmonTempSensor.cpp
@@ -42,12 +42,12 @@ HwmonTempSensor::HwmonTempSensor(
     std::shared_ptr<sdbusplus::asio::connection>& conn,
     boost::asio::io_service& io, const std::string& sensorName,
     std::vector<thresholds::Threshold>&& _thresholds,
-    const std::string& sensorConfiguration, const PowerState powerState) :
+    const std::string& sensorConfiguration, const PowerState powerState, const double hysteresisVal) :
     Sensor(boost::replace_all_copy(sensorName, " ", "_"),
            std::move(_thresholds), sensorConfiguration, objectType, maxReading,
            minReading),
     objServer(objectServer), inputDev(io, open(path.c_str(), O_RDONLY)),
-    waitTimer(io), path(path), errCount(0), readState(powerState)
+    waitTimer(io), path(path), errCount(0), readState(powerState), hysteresisVal(hysteresisVal)
 {
     sensorInterface = objectServer.add_interface(
         "/xyz/openbmc_project/sensors/temperature/" + name,
@@ -71,6 +71,7 @@ HwmonTempSensor::HwmonTempSensor(
     setInitialProperties(conn);
     setupPowerMatch(conn);
     setupRead();
+    updateHysteresis(hysteresisVal);
 }
 
 HwmonTempSensor::~HwmonTempSensor()
